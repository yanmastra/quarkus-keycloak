name: '${PROJECT_NAME}'
services:
  postgres:
    image: '${PROJECT_NAME}/postgres:latest'
    container_name: '${PROJECT_NAME}-postgres'
    hostname: '${PROJECT_NAME}-postgres'
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    environment:
      POSTGRES_MULTIPLE_DATABASES: ${DB_LIST}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./.postgresql:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - main-proxy

  keycloak:
    image: '${PROJECT_NAME}/keycloak:latest'
    container_name: '${PROJECT_NAME}-keycloak'
    command:
      - start
      - --optimized
      - --db-url=jdbc:postgresql://${PROJECT_NAME}-postgres:5432/${KEYCLOAK_DB_NAME}?serverTimezone=UTC
      - --db-username=${DATABASE_USERNAME}
      - --db-password=${DATABASE_PASSWORD}
      - --https-key-store-file=/opt/keycloak/conf/server.keystore
      - --https-key-store-password=${KEYCLOAK_KEYSTORE_PASSWORD}
      - --proxy-headers=forwarded
      - --hostname=${KEYCLOAK_HOST}
#      - -Dkeycloak.import=/opt/keycloak/imports/
    ports:
      - "${KEYCLOAK_EXTERNAL_PORT}:8443"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      JAVA_OPTS_KC_HEAP: "-XX:MaxHeapFreeRatio=40 -XX:MaxRAMPercentage=65"
#    volumes:
#      - ./keycloak/imports:/opt/keycloak/imports
    healthcheck:
      test:
        [ "CMD", "curl", "-f", "https://localhost:8443/" ]
      interval: 5s
      timeout: 5s
      retries: 1
      start_period: 6s
    restart: unless-stopped
    networks:
      - main-proxy

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: "${PROJECT_NAME}-nginx-proxy"
    ports:
      - "80:80"
      - "443:443"
    environment:
      TRUST_DOWNSTREAM_PROXY: true
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx:/var/lib/www
    networks:
      - main-proxy

networks:
  main-proxy:
    name: '${PROJECT_NAME}-net-proxy'
    driver: bridge
